# -*- coding: utf-8 -*-
"""Univariate LSTM

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fUvMm89YmoKEcltAp1uOBGUvBX-PhSsC
"""



import numpy as np
import math
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import LSTM, Dense

def split_sequence(sequence, n_steps):
  X, y = [], []
  for i in range(len(sequence)):
    end_ix=i+n_steps
    if end_ix > len(sequence)-1:
      break
    seq_x, seq_y=sequence[i:end_ix], sequence[end_ix]
    X.append(seq_x), y.append(seq_y)
  return np.asarray(X), np.asarray(y)

#raw_seq=[i for i in range(10, 100, 10)]
raw_seq=[math.sin(i/10) for i in range(1,1000)]
#raw_seq
plt.plot(raw_seq)
plt.show

n_step=3
X,y=split_sequence(raw_seq,n_step)
#X, y

n_features=1
X2=X.reshape((X.shape[0],X.shape[1],n_features))
#X2.shape
#X2

model = Sequential()
model.add(LSTM(50,activation='relu',input_shape=(n_step,n_features)))
model.add(Dense(1))
model.compile(optimizer='adam',loss='mse')
model.fit(X2,y,epochs=200,verbose=0)

#x_input=np.array([70,80,100])
t=np.random.randint(1,1000)
print(t)
x_input=np.asarray([math.sin((i+t)/10) for i in range(0,n_step)])
print(x_input)
x2_input=x_input.reshape((1,n_step,n_features))
y_predict=model(x2_input)
print(y_predict)
print("Acc:", math.sin((t+n_step)/10))

